<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitbdd528a76e40b964576f4f7ce8d71815
=======
class ComposerAutoloaderInit3c5fa5a2a4cb85377474e7b5249df7c8
>>>>>>> 566be8cb1b036acb17c607ada9a42d903da37de0
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitbdd528a76e40b964576f4f7ce8d71815', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitbdd528a76e40b964576f4f7ce8d71815', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit3c5fa5a2a4cb85377474e7b5249df7c8', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit3c5fa5a2a4cb85377474e7b5249df7c8', 'loadClassLoader'));
>>>>>>> 566be8cb1b036acb17c607ada9a42d903da37de0

        $includePaths = require __DIR__ . '/include_paths.php';
        array_push($includePaths, get_include_path());
        set_include_path(join(PATH_SEPARATOR, $includePaths));

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        $includeFiles = require __DIR__ . '/autoload_files.php';
        foreach ($includeFiles as $file) {
<<<<<<< HEAD
            composerRequirebdd528a76e40b964576f4f7ce8d71815($file);
=======
            composerRequire3c5fa5a2a4cb85377474e7b5249df7c8($file);
>>>>>>> 566be8cb1b036acb17c607ada9a42d903da37de0
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequirebdd528a76e40b964576f4f7ce8d71815($file)
=======
function composerRequire3c5fa5a2a4cb85377474e7b5249df7c8($file)
>>>>>>> 566be8cb1b036acb17c607ada9a42d903da37de0
{
    require $file;
}
